name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - ahmedHamada

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run MegaLinter
        uses: oxsecurity/megalinter@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload MegaLinter Reports
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: megalinter-reports/

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t algn48/node-todo:latest .

      - name: Push Docker Image
        run: |
          docker tag algn48/node-todo:latest algn48/node-todo:${{ github.sha }}
          docker push algn48/node-todo:latest
          docker push algn48/node-todo:${{ github.sha }}

  update-argocd:
    runs-on: ubuntu-latest
    needs: [build-and-push-images]
    steps:
      - name: Checkout ArgoCD repo
        uses: actions/checkout@v4
        with:
          repository: your-org/argocd-config
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Image Tag
        run: |
          sed -i "s|image: algn48/node-todo:.*|image: algn48/node-todo:${{ github.sha }}|" deployment.yaml
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Update image tag to ${{ github.sha }}"
          git push origin main

  notify-teams:
    runs-on: ubuntu-latest
    needs: [build-and-push-images, update-argocd]
    if: always()
    steps:
      - name: Download MegaLinter Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: MegaLinter reports
          path: megalinter-reports

      - name: Extract MegaLinter Summary
        id: extract_report
        run: |
          REPORT_FILE="megalinter-reports/mega-linter.log"
          if [ -f "$REPORT_FILE" ]; then
            SUMMARY=$(tail -n 20 "$REPORT_FILE" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
            echo "report_summary=$SUMMARY" >> $GITHUB_ENV
          else
            echo "report_summary=No report found." >> $GITHUB_ENV
          fi

      - name: Send Teams Notification on Success
        if: success()
        run: |
          curl -H 'Content-Type: application/json' -d '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "GitHub Actions Workflow Completed",
            "themeColor": "00FF00",
            "title": "✅ Build & Deployment Successful",
            "text": "**Repository:** algn48/node-todo\n**New Tag:** ${{ github.sha }}\n[View Docker Hub](https://hub.docker.com/r/algn48/node-todo)\n\n**MegaLinter Report:**\n```
              ${{ env.report_summary }}
              ```"
                        }' ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Send Teams Notification on Failure
        if: failure()
        run: |
          curl -H 'Content-Type: application/json' -d '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "GitHub Actions Workflow Failed",
            "themeColor": "FF0000",
            "title": "❌ Build & Deployment Failed",
            "text": "Check GitHub Actions for details.\n\n**MegaLinter Report:**\n```
              ${{ env.report_summary }}
              ```"
                        }' ${{ secrets.TEAMS_WEBHOOK_URL }}
