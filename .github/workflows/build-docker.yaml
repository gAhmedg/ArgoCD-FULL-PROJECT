name: Build and Publish Image to Docker Hub

on:
  push:
    branches:
      - main
      - ahmedHamada

permissions:
  contents: write

env:
  APPLY_FIXES: none
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: commit

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    continue-on-error: true

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: MegaLinter
        uses: oxsecurity/megalinter@v8
        id: ml
        continue-on-error: true
        env:
          VALIDATE_ALL_CODEBASE: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure MegaLinter Reports Directory Exists
        run: mkdir -p megalinter-reports
        shell: bash

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: MegaLinter reports
          include-hidden-files: "true"
          path: |
            megalinter-reports
            mega-linter.log

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: megalinter
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t algn48/node-todo:latest .  

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "algn48" --password-stdin

      - name: Get Latest Tag from Docker Hub and Increment
        id: get_tag
        run: |
          LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/algn48/node-todo/tags/?page_size=1" | jq -r '.results[0].name' | grep -Eo '[0-9]+' || echo 0)
          NEW_TAG=$((LATEST_TAG + 1))
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Push Image to Docker Hub
        run: |
          docker tag algn48/node-todo:latest algn48/node-todo:${{ env.new_tag }}
          docker push algn48/node-todo:${{ env.new_tag }}

  notify-teams:
    runs-on: ubuntu-latest
    needs: [build-and-push-images]
    if: always()
    steps:
      - name: Download MegaLinter Reports
        uses: actions/download-artifact@v4
        with:
          name: MegaLinter reports

      - name: Send Teams Notification on Success
        if: success()
        run: |
          curl -H 'Content-Type: application/json' -d '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "GitHub Actions Workflow Completed",
            "themeColor": "00FF00",
            "title": "‚úÖ Build & Deployment Successful",
            "text": "**Repository:** algn48/node-todo\n**New Tag:** ${{ env.new_tag }}\n**Triggered by:** ${{ github.actor }}\n[View Docker Hub](https://hub.docker.com/r/algn48/node-todo)",
            "sections": [{
              "text": "üìú Attached MegaLinter Reports",
              "facts": [
                { "name": "Report Directory", "value": "megalinter-reports" },
                { "name": "Log File", "value": "mega-linter.log" }
              ]
            }]
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Send Teams Notification on Failure
        if: failure()
        run: |
          curl -H 'Content-Type: application/json' -d '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "GitHub Actions Workflow Failed",
            "themeColor": "FF0000",
            "title": "‚ùå Build & Deployment Failed",
            "text": "**Triggered by:** ${{ github.actor }}\nCheck GitHub Actions for details.",
            "sections": [{
              "text": "üìú Attached MegaLinter Reports",
              "facts": [
                { "name": "Report Directory", "value": "megalinter-reports" },
                { "name": "Log File", "value": "mega-linter.log" }
              ]
            }]
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}
